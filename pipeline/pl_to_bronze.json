{
	"name": "pl_to_bronze",
	"properties": {
		"activities": [
			{
				"name": "control table lookup",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from supplychains.control where indicator =1;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_azure_sql_table",
						"type": "DatasetReference",
						"parameters": {
							"ds_schema": {
								"value": "@pipeline().parameters.pl_p_schema",
								"type": "Expression"
							},
							"ds_table": {
								"value": "@pipeline().parameters.pl_p_table",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach table",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "control table lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('control table lookup').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "file or table check",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().source_object_type,'table')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "full load or incremental load check",
										"type": "IfCondition",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"expression": {
												"value": "@equals(toLower(item().load_type),'incremental')",
												"type": "Expression"
											},
											"ifFalseActivities": [
												{
													"name": "Copy data full load",
													"type": "Copy",
													"dependsOn": [],
													"policy": {
														"timeout": "0.12:00:00",
														"retry": 0,
														"retryIntervalInSeconds": 30,
														"secureOutput": false,
														"secureInput": false
													},
													"userProperties": [],
													"typeProperties": {
														"source": {
															"type": "AzureSqlSource",
															"sqlReaderQuery": {
																"value": "@concat('select * from ',item().source_object_schema,'.',item().source_object_name)",
																"type": "Expression"
															},
															"queryTimeout": "02:00:00",
															"partitionOption": "None"
														},
														"sink": {
															"type": "ParquetSink",
															"storeSettings": {
																"type": "AzureBlobFSWriteSettings"
															},
															"formatSettings": {
																"type": "ParquetWriteSettings"
															}
														},
														"enableStaging": false,
														"translator": {
															"type": "TabularTranslator",
															"typeConversion": true,
															"typeConversionSettings": {
																"allowDataTruncation": true,
																"treatBooleanAsNumber": false
															}
														}
													},
													"inputs": [
														{
															"referenceName": "ds_azure_sql_table",
															"type": "DatasetReference",
															"parameters": {
																"ds_schema": {
																	"value": "@item().source_object_schema",
																	"type": "Expression"
																},
																"ds_table": {
																	"value": "@item().source_object_name",
																	"type": "Expression"
																}
															}
														}
													],
													"outputs": [
														{
															"referenceName": "ds_parquet",
															"type": "DatasetReference",
															"parameters": {
																"ds_container": {
																	"value": "@item().target_location",
																	"type": "Expression"
																},
																"ds_file": {
																	"value": "@item().source_object_name",
																	"type": "Expression"
																}
															}
														}
													]
												}
											],
											"ifTrueActivities": [
												{
													"name": "Copy data incremental load",
													"type": "Copy",
													"dependsOn": [],
													"policy": {
														"timeout": "0.12:00:00",
														"retry": 0,
														"retryIntervalInSeconds": 30,
														"secureOutput": false,
														"secureInput": false
													},
													"userProperties": [],
													"typeProperties": {
														"source": {
															"type": "AzureSqlSource",
															"sqlReaderQuery": {
																"value": "@concat('select * from ',item().source_object_schema,'.',item().source_object_name,'where ',item().watermark_column,' = ',item().watermark_value)",
																"type": "Expression"
															},
															"queryTimeout": "02:00:00",
															"partitionOption": "None"
														},
														"enableStaging": false
													},
													"inputs": [
														{
															"referenceName": "ds_azure_sql_table",
															"type": "DatasetReference",
															"parameters": {
																"ds_schema": {
																	"value": "@item().source_object_schema",
																	"type": "Expression"
																},
																"ds_table": {
																	"value": "@item().source_object_name",
																	"type": "Expression"
																}
															}
														}
													]
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"pl_p_schema": {
				"type": "string"
			},
			"pl_p_table": {
				"type": "string"
			}
		},
		"folder": {
			"name": "Bronze"
		},
		"annotations": []
	}
}